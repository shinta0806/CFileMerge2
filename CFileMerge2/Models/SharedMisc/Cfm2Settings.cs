// ============================================================================
// 
// ちょちょいとファイル合併 2 の設定を管理
// 
// ============================================================================

// ----------------------------------------------------------------------------
// 
// ----------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CFileMerge2.Models.Cfm2Models;

namespace CFileMerge2.Models.SharedMisc;

internal class Cfm2Settings
{
    // ====================================================================
    // コンストラクター
    // ====================================================================

    // --------------------------------------------------------------------
    // メインコンストラクター
    // EnvironmentModel 構築時に呼びだされるため、LogWriter は指定できない
    // --------------------------------------------------------------------
    public Cfm2Settings()
    {
    }

    // ====================================================================
    // public プロパティー
    // ====================================================================

    // --------------------------------------------------------------------
    // 設定
    // --------------------------------------------------------------------

    /// <summary>
    /// h1～h6 に対して目次を作成するかどうか
    /// </summary>
    public Boolean[] TocTargets
    {
        get;
        set;
    } = new Boolean[Cfm2Constants.HX_TAG_RANK_MAX + 1];

    // --------------------------------------------------------------------
    // 終了時の状態（ちょちょいとファイル合併 2 専用）
    // --------------------------------------------------------------------

    /// <summary>
    /// メイクファイルのパス
    /// </summary>
    public String MakePath
    {
        get;
        set;
    } = String.Empty;

    // --------------------------------------------------------------------
    // 終了時の状態（一般）
    // --------------------------------------------------------------------

    // 前回起動時の世代
    public String PrevLaunchGeneration { get; set; } = String.Empty;

    // 前回起動時のバージョン
    public String PrevLaunchVer { get; set; } = String.Empty;

    // 前回起動時のパス
    public String PrevLaunchPath { get; set; } = String.Empty;

    // RSS 確認日
    public DateTime RssCheckDate
    {
        get; set;
    }

    // ====================================================================
    // public 関数
    // ====================================================================

    /// <summary>
    /// 調整
    /// </summary>
    public void Adjust()
    {
        if (!TocTargets.Contains(true))
        {
            // 目次作成対象が 1 つもない場合はデフォルトを対象にする
            TocTargets[1] = true;
            TocTargets[2] = true;
        }
    }

}
